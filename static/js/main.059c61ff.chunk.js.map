{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","border","cursor","TextForm","useState","text","setText","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","disabled","length","toLowerCase","charAt","slice","navigator","clipboard","writeText","alert","split","filter","element","Alert","role","msg","defaultProps","aboutText","App","setMode","setMyAlert","message","setTimeout","cls","document","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.059c61ff.chunk.js","sourcesContent":["//type rfc\r\nimport React from 'react'\r\n//impt\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode === 'light'?'light':'dark'} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                    </li> */}\r\n                </ul>\r\n                <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:\"30px\", width:\"30px\",border: '1px solid white', cursor: 'pointer'}}></div>\r\n                <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:\"30px\", width:\"30px\",border: '1px solid white', cursor: 'pointer'}}></div>\r\n                <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:\"30px\", width:\"30px\",border: '1px solid white', cursor: 'pointer'}}></div>\r\n                <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:\"30px\", width:\"30px\", border: '1px solid white', cursor: 'pointer'}}></div>\r\n                <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:\"30px\", width:\"30px\", border: \"1px solid black\", cursor: 'pointer'}}></div>\r\n                <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark')}} style={{height:\"30px\", width:\"30px\",border: '1px solid white', cursor: 'pointer'}}></div>\r\n\r\n                {/* only for toggle */}\r\n                {/* <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={()=>{props.toggleMode('null')}}/>\r\n                    <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Toggle Mode</label>\r\n                </div> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired\r\n                    , aboutText: PropTypes.string}; \r\n\r\nNavbar.defaultProps = { \r\n                        title : \"Set title here\",\r\n                        aboutText: \"About text here\"\r\n                        };\r\n                        \r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleCapClick = ()=>{\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = ''\r\n        setText(newText);\r\n    }\r\n    const handleCopyClick = ()=>{\r\n            navigator.clipboard.writeText(text);          \r\n            alert(\"Copied the text: \" + text);\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode=== 'light'?'black':'white'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"10\" value={text} onChange={handleOnChange} style={{backgroundColor: 'white'}}></textarea>\r\n            </div> \r\n            <button type=\"button\" className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick} disabled={text.length===0} >Covert Into Upper Case</button>\r\n            <button type=\"button\" className=\"btn btn-danger mx-2 my-1\" onClick={handleLoClick} disabled={text.length===0} >Covert Into Lower Case</button>\r\n            <button type=\"button\" className=\"btn btn-warning mx-2 my-1\" onClick={handleCapClick} disabled={text.length===0} >Captilize Case</button>\r\n            <button type=\"button\" className=\"btn btn-info mx-2 my-1\" onClick={handleClearClick} disabled={text.length===0} >Clear</button>\r\n            <button type=\"button\" className=\"btn btn-info mx-2 my-1\" onClick={handleCopyClick} disabled={text.length===0} >Copy to ClipBoard</button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:props.mode=== 'light'?'black':'white'}}>\r\n            <h1>Your Test Summary</h1>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p> \r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox to prev it\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                {props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport React, { useState } from 'react'\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setMyAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setMyAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setMyAlert(null);\n    },1500);\n  }\n\n  const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-warning');\n  }\n  \n  const toggleMode = (cls)=>{\n    removeBodyClasses();\n    setMode(cls);\n    document.body.classList.add('bg-'+cls)\n    showAlert(cls+\" mode has been enable\",\"success\")\n    document.title = 'TextUtils - '+cls;\n  }    \n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"MyTextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/><hr/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading=\"TextUtils - Word Counter, Charecter Counter\" mode={mode} showAlert={showAlert}/>\n          {/* </Route>\n        </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}